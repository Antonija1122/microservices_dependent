sudo: required
services:
  - docker

env:
  global:
    - CHANGE_MINIKUBE_NONE_USER=true
    - MINIKUBE_WANTUPDATENOTIFICATION=false
    - MINIKUBE_WANTREPORTERRORPROMPT=false
    - MINIKUBE_HOME=$HOME
    - CHANGE_MINIKUBE_NONE_USER=true
    - KUBECONFIG=$HOME/.kube/config
    
before_install:
# In real-life we would do necessary setup/install here for real environment cli
# Download kubectl, which is a requirement for using minikube.
  - curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/v1.20.1/bin/linux/amd64/kubectl && chmod +x kubectl && sudo mv kubectl /usr/local/bin/
# Download minikube. 
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/v1.16.0/minikube-linux-amd64 && chmod +x minikube && sudo mv minikube /usr/local/bin/
  - mkdir -p $HOME/.kube $HOME/.minikube
  - touch $KUBECONFIG
  - sudo apt-get install -y conntrack
  - sudo minikube start --profile=minikube --vm-driver=none --kubernetes-version=v1.20.1
  - minikube update-context --profile=minikube
  - "sudo chown -R travis: /home/travis/.minikube/"
  - eval "$(minikube docker-env --profile=minikube)" && export DOCKER_CLI='docker'
  - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin

jobs:
  include:
    - stage: build_image
      script: 
        - docker build -t antonijaa/service1:test -f ./service1/Dockerfile ./service1
        - docker build -t antonijaa/service2:test -f ./service2/Dockerfile ./service2
    - stage: unit_tests
      script: echo "skiping unit testing"
    - stage: integration_tests
      script: echo "skiping integration testing"
    - stage: push_arifact
      script: push_artifact.sh
    - stage: deploy_to_staging
      script: skip
      deploy: 
        provider: script
        script: bash ./deploy_to_staging.sh
        on:
          branch: master
    - stage: deploy_to_production
      script: skip
      deploy: 
        provider: script
        script: bash ./deploy_to_production.sh
        on:
          branch: master
